#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&trackball {
    automouse-layer = <4>;
    scroll-layers = <5>;

    // arrows {
    //     layers = <3>;
    //     bindings =
    //         <&kp RIGHT_ARROW>,
    //         <&kp LEFT_ARROW>,
    //         <&kp UP_ARROW>,
    //         <&kp DOWN_ARROW>;
    //     tick = <10>;
    //     wait-ms = <5>;
    //     tap-ms = <5>;
    // };
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q                    &kp W      &kp E       &kp R                 &kp T                                                                        &kp Y          &kp U  &kp I      &kp O      &mt RIGHT_ALT P
&kp A                    &kp S      &kp D       &kp F                 &kp G        &none                                 &kp MINUS                 &kp H          &kp J  &kp K      &kp L      &kp ENTER
&mt LEFT_SHIFT Z         &kp X      &kp C       &kp V                 &kp B        &kp COLON                             &kp SEMICOLON             &kp N          &kp M  &mkp LCLK  &mkp RCLK  &mt MINUS RIGHT_SHIFT
&mt LEFT_WIN UNDERSCORE  &kt COMMA  &kt PERIOD  &lt_to_layer_0 1 TAB  &lt 2 SPACE  &lt_to_layer_0 3 INTERNATIONAL_2      &mt RIGHT_WIN LANGUAGE_6  &kp BACKSPACE                               &lt 3 ESC
            >;

            sensor-bindings = <&inc_dec_kp K_SCROLL_UP K_SCROLL_DOWN>;
        };

        FUNCTION {
            bindings = <
&kp PRCNT    &kp DLLR   &kp AMPS      &kp CARET        &kt SLASH                         &kp BACKSLASH   &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp LESS_THAN     &kp GREATER_THAN
&kp AT_SIGN  &kp HASH   &kp ASTERISK  &kp PLUS         &kp EQUAL     &trans      &trans  &kp UNDERSCORE  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp SEMICOLON     &kp COLON
&kp GRAVE    &kp TILDE  &trans        &kt EXCLAMATION  &kp QUESTION  &trans      &trans  &kp PIPE        &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp SINGLE_QUOTE  &kp DOUBLE_QUOTES
&trans       &trans     &trans        &trans           &trans        &trans      &trans  &trans                                                                         &trans
            >;
        };

        NUM {
            bindings = <
&kp LSHIFT       &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &trans                                      &kp ENTER        &kp HOME        &kp UP_ARROW    &kp END          &kp RIGHT_ALT
&kp KP_NUMBER_0  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &trans  &trans              &kp UNDERSCORE  &kp EXCLAMATION  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp PAGE_DOWN
&trans           &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &trans  &kp LEFT_SHIFT      &trans          &kp LA(LEFT)     &kp LA(RIGHT)   &mkp LCLK       &mkp RCLK        &mkp MB3
&trans           &trans           &trans           &trans           &trans  &trans              &trans          &trans                                                            &trans
            >;
        };

        ARROW {
            bindings = <
&trans  &kp F7  &kp F8  &kp F9  &kt F12                         &trans         &trans  &kp K_MUTE   &kp C_VOLUME_DOWN  &kp C_VOLUME_UP
&trans  &kp F4  &kp F5  &kp F6  &kp F11  &trans      &trans     &trans         &trans  &kp LG(TAB)  &kp F13            &trans
&trans  &kp F1  &kp F2  &kp F3  &kt F10  &trans      &trans     &kp LG(LS(S))  &trans  &trans       &trans             &trans
&trans  &trans  &trans  &trans  &trans   &trans      &kp RCTRL  &trans                                                 &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(K_SCROLL_UP) LC(K_SCROLL_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
